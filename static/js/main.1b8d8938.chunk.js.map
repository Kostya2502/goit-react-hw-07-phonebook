{"version":3,"sources":["components/contactForm/ContactForm.module.css","components/contactList/ContactList.module.css","components/filter/Filter.module.css","components/App.module.css","redux/selectors.js","redux/actions.js","components/contactForm/ContactForm.js","redux/operations.js","components/contactList/ContactList.js","components/filter/Filter.js","components/loader/LoaderSpinner.js","components/App.js","redux/reducers.js","redux/store.js","index.js"],"names":["module","exports","allContacts","state","contacts","items","contactsFilter","filter","isLoading","loading","filterContactsByName","createSelector","normalizedFilter","toLocaleLowerCase","name","includes","addContactRequest","createAction","addContactSuccess","addContactError","getContactsRequest","getContactsSuccess","getContactsError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","ContactForm","useForm","register","handleSubmit","errors","useState","setName","number","setNumber","dispatch","useDispatch","myNamesInItem","useSelector","reset","handleChange","e","preventDefault","currentTarget","value","onSubmit","contactName","contactNumber","map","contact","alert","axios","post","process","then","data","id","catch","error","className","style","form","label","type","placeholder","onChange","input","ref","required","warn","pattern","button","ContactList","useEffect","a","get","Object","keys","key","ondeleteContact","delete","deleteContact","TransitionGroup","component","CSSTransition","timeout","classNames","item","onClick","connect","OnFilterContacts","contactsActions","LoaderSpinner","color","height","width","margin","Component","App","loader","in","appear","unmountOnExit","length","createReducer","payload","_","combineReducers","store","configureStore","reducer","mainReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b8d8938.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Zho_\",\"label\":\"ContactForm_label__2TITa\",\"input\":\"ContactForm_input__R5Q7v\",\"button\":\"ContactForm_button__1xLou\",\"warn\":\"ContactForm_warn__1X3o2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1yTs2\",\"button\":\"ContactList_button__em0FU\",\"enter\":\"ContactList_enter__lyugf\",\"enterActive\":\"ContactList_enterActive__OGe3x\",\"exit\":\"ContactList_exit__358gR\",\"exitActive\":\"ContactList_exitActive__1yZZw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Filter_enter__1pTd8\",\"enterActive\":\"Filter_enterActive__1CMMS\",\"exit\":\"Filter_exit__3xhvW\",\"exitActive\":\"Filter_exitActive__2H-88\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"App_appear__3IMmz\",\"appearActive\":\"App_appearActive__12c5n\"};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst allContacts = state => state.contacts.items;\r\n\r\nconst contactsFilter = state => state.contacts.filter;\r\n\r\nconst isLoading = state => state.contacts.loading;\r\n\r\nconst filterContactsByName = createSelector(\r\n    allContacts, contactsFilter,\r\n    (contacts, filter) => {\r\n        const normalizedFilter = filter.toLocaleLowerCase();\r\n\r\n        return contacts.filter(({ name }) =>\r\n            name.toLocaleLowerCase().includes(normalizedFilter),\r\n        );\r\n    },\r\n);\r\n\r\nexport { allContacts, contactsFilter, isLoading, filterContactsByName };","import { createAction } from \"@reduxjs/toolkit\";\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n\r\n// export const addContact = createAction('contact/add', (itemsName, itemsNumber) => ({\r\n//     payload: {\r\n//         id: uuidv4(),\r\n//         name: itemsName,\r\n//         number: itemsNumber,\r\n//     }\r\n// }));\r\n\r\nexport const addContactRequest = createAction('contact/addContactRequest');\r\nexport const addContactSuccess = createAction('contact/addContactSuccess');\r\nexport const addContactError = createAction('contact/addContactError');\r\n\r\nexport const getContactsRequest = createAction('contact/getContactsRequest',);\r\nexport const getContactsSuccess = createAction('contact/getContactsSuccess',);\r\nexport const getContactsError = createAction('contact/getContactsError');\r\n\r\nexport const deleteContactRequest = createAction('contact/deleteContactRequest',);\r\nexport const deleteContactSuccess = createAction('contact/deleteContactSuccess',);\r\nexport const deleteContactError = createAction('contact/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contact/changeFilter');","import style from \"./ContactForm.module.css\";\r\nimport { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { allContacts } from \"../../redux/selectors\";\r\nimport { addContact } from \"../../redux/operations\";\r\n\r\nexport default function ContactForm() {\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const dispatch = useDispatch();\r\n    const myNamesInItem = useSelector(allContacts);\r\n\r\n    const reset = () => {\r\n        setName('');\r\n        setNumber('');\r\n    };\r\n\r\n    const onSubmit = () => {\r\n        const getContacts = myNamesInItem.map(contact =>\r\n            contact.name.toLocaleLowerCase(),\r\n        );\r\n\r\n        const isGetContactAlready = getContacts.includes(name.toLocaleLowerCase());\r\n\r\n        if (isGetContactAlready) {\r\n            reset();\r\n            return alert(`${name} is already in contacts!`);\r\n        }\r\n        dispatch(addContact(name, number));\r\n        reset();\r\n    };\r\n\r\n    const handleChange = e => {\r\n        e.preventDefault();\r\n        const { name, value } = e.currentTarget;\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} className={style.form}>\r\n            <label className={style.label}>\r\n                Name:\r\n          <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder=\"enter name\"\r\n                    onChange={handleChange}\r\n                    className={style.input}\r\n                    ref={register({ required: true })}\r\n                />\r\n            </label>\r\n\r\n            {errors.name && errors.name.type === 'required' && (\r\n                <p className={style.warn}>This is required </p>\r\n            )}\r\n\r\n            <label className={style.label}>\r\n                Number:\r\n          <input\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={number}\r\n                    placeholder=\"enter number\"\r\n                    ref={register({\r\n                        required: true,\r\n                        pattern: /^[0-9]+$/gm,\r\n                    })}\r\n                    onChange={handleChange}\r\n                    className={style.input}\r\n                />\r\n            </label>\r\n\r\n            {errors.number && errors.number.type === 'required' && (\r\n                <p className={style.warn}>This is required </p>\r\n            )}\r\n\r\n            {errors.number && errors.number.type === 'pattern' && (\r\n                <p className={style.warn}>There must be numbers</p>\r\n            )}\r\n\r\n            <button type=\"submit\" className={style.button}>\r\n                Add contact\r\n        </button>\r\n        </form>\r\n    );\r\n}\r\n","import axios from 'axios';\r\nimport {\r\n    addContactRequest, addContactSuccess, addContactError,\r\n    getContactsRequest, getContactsSuccess, getContactsError,\r\n    deleteContactRequest, deleteContactSuccess, deleteContactError\r\n} from './actions'\r\n\r\n\r\nexport const addContact = (contactName, contactNumber) => dispatch => {\r\n    const contact = {\r\n        name: contactName,\r\n        number: contactNumber,\r\n    };\r\n    dispatch(addContactRequest());\r\n    axios.post(`${process.env.REACT_APP_BASE_URL}/contacts.json`, contact)\r\n        .then(({ data }) => dispatch(addContactSuccess({ ...contact, id: data.name })))\r\n        .catch((error) => dispatch(addContactError(error)))\r\n}\r\n\r\n// export const deleteContact = Id => dispatch => {\r\n//     dispatch(deleteContactRequest());\r\n//     axios.delete(`${process.env.REACT_APP_BASE_URL}/contacts/${id}.json`)\r\n//         .then(() => dispatch(deleteContactSuccess(Id)))\r\n//         .catch(error => dispatch(deleteContactError(error)));\r\n// };\r\n\r\nexport const deleteContact = id => async dispatch => {\r\n    dispatch(deleteContactRequest());\r\n    try {\r\n        await axios.delete(`${process.env.REACT_APP_BASE_URL}/contacts/${id}.json`);\r\n        dispatch(deleteContactSuccess(id));\r\n    } catch (error) {\r\n        dispatch(deleteContactError(error));\r\n    }\r\n};\r\n\r\nexport const getContacts = () => async dispatch => {\r\n    dispatch(getContactsRequest());\r\n    try {\r\n        const { data } = await axios.get(`${process.env.REACT_APP_BASE_URL}/contacts.json`);\r\n        const contacts = Object.keys(data).map((key) => ({\r\n            ...data[key],\r\n            id: key,\r\n        }));\r\n        dispatch(getContactsSuccess(contacts));\r\n    } catch (error) {\r\n        dispatch(getContactsError(error));\r\n    }\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport style from './ContactList.module.css';\r\nimport './ContactList.css';\r\nimport { deleteContact, getContacts } from '../../redux/operations';\r\nimport { filterContactsByName } from '../../redux/selectors';\r\n\r\nconst ContactList = () => {\r\n    const dispatch = useDispatch();\r\n    const contacts = useSelector(filterContactsByName);\r\n\r\n    useEffect(() => {\r\n        dispatch(getContacts());\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const ondeleteContact = id => dispatch(deleteContact(id));\r\n\r\n    return (\r\n        <TransitionGroup component='ul' >\r\n            {contacts.map(({ id, name, number }) => (\r\n                < CSSTransition key={id} timeout={400} classNames={style} >\r\n                    <li key={id} className={style.item}>\r\n                        <p >\r\n                            {name}: {number}\r\n                        </p>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => ondeleteContact(id)}\r\n                            className={style.button}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </li>\r\n                </CSSTransition>\r\n            ))\r\n            }\r\n        </TransitionGroup >\r\n    );\r\n}\r\n\r\nexport default ContactList;\r\n","import style from './Filter.module.css';\r\nimport { connect } from \"react-redux\";\r\nimport * as contactsActions from '../../redux/actions';\r\nimport { contactsFilter } from '../../redux/selectors';\r\n\r\nconst Filter = ({ value, OnFilterContacts }) => {\r\n    return (\r\n        <div classNames={style}><label>\r\n            Find contacts by name:\r\n            <input\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={OnFilterContacts}\r\n                placeholder='Search contact'\r\n            />\r\n        </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    value: contactsFilter(state),\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    OnFilterContacts: e =>\r\n        dispatch(contactsActions.changeFilter(e.currentTarget.value)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport default class LoaderSpinner extends Component {\r\n    render() {\r\n        return (\r\n            <Loader\r\n                type=\"TailSpin\"\r\n                color=\"#00BFFF\"\r\n                height={100}\r\n                width={100}\r\n                timeout={3000}\r\n                style={{ margin: \"auto\" }}\r\n            />\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport Filter from \"./filter/Filter\";\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport style from './App.module.css';\r\nimport { useSelector } from \"react-redux\";\r\nimport { allContacts, contactsFilter, isLoading } from '../redux/selectors';\r\nimport LoaderSpinner from './loader/LoaderSpinner'\r\n\r\nconst App = () => {\r\n    const value = useSelector(contactsFilter);\r\n    const contacts = useSelector(allContacts);\r\n    const loader = useSelector(isLoading);\r\n\r\n    return (\r\n        <>\r\n            <CSSTransition in={true} classNames={style} appear={true} timeout={1000} unmountOnExit>\r\n                <h1>Phonebook</h1>\r\n            </CSSTransition>\r\n            <ContactForm />\r\n            <h2>Contacts</h2>\r\n            {(value.length > 0 || contacts.length > 1) && <Filter />}\r\n            {loader && <LoaderSpinner />}\r\n            <ContactList />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n    addContactRequest, addContactSuccess, addContactError,\r\n    getContactsRequest, getContactsSuccess, getContactsError,\r\n    deleteContactRequest, deleteContactSuccess, deleteContactError,\r\n    changeFilter\r\n} from './actions'\r\n\r\nconst items = createReducer([], {\r\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n    [getContactsSuccess]: (_, { payload }) => payload,\r\n    [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload)\r\n}\r\n);\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, { payload }) => payload,\r\n})\r\n\r\nconst loading = createReducer(false, {\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [getContactsRequest]: () => true,\r\n    [getContactsSuccess]: () => false,\r\n    [getContactsError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    loading,\r\n});","import { configureStore } from '@reduxjs/toolkit';\r\nimport mainReducer from \"./reducers\";\r\n\r\nconst store = configureStore({ reducer: { contacts: mainReducer } })\r\n\r\nexport default store;\r\n\r\n// =============================================================\r\n// import { configureStore } from '@reduxjs/toolkit';\r\n// import mainReducer from \"./reducers\";\r\n// import {\r\n//     persistStore,\r\n//     persistReducer\r\n// } from 'redux-persist';\r\n// import storage from 'redux-persist/lib/storage';\r\n\r\n// const contactsPersistConfig = {\r\n//     key: 'contacts',\r\n//     storage,\r\n//     blacklist: ['filter'],\r\n// };\r\n// const store = configureStore({\r\n//     reducer: {\r\n//         contacts: persistReducer(contactsPersistConfig, mainReducer),\r\n//     }\r\n// });\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// export { store, persistor };\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from \"react-redux\";\nimport store from './redux/store';\n// import { PersistGate } from 'redux-persist/integration/react';\n// import { store, persistor } from './redux/store';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// ReactDOM.render(<Provider store={store}>\n//     <PersistGate loading={null} persistor={persistor}>\n//         <App /></PersistGate></Provider>, document.getElementById('root'));"],"sourceRoot":""}